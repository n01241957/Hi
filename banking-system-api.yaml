openapi: 3.0.3
info:
  title: Online Banking API
  description: API for managing bank accounts, fund transfers, and transaction history.
  version: 1.0.0
  contact:
    email: support@bank.com
servers:
  - url: https://api.bank.com/v1
    description: Production server
  - url: https://staging.api.bank.com/v1
    description: Staging server
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
        errorCode:
          type: integer
      example:
        message: "Invalid token"
        errorCode: 401
    Account:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
          format: email
        balance:
          type: number
      example:
        id: 1
        name: "John Doe"
        email: "john.doe@example.com"
        balance: 1000.00
    Transaction:
      type: object
      properties:
        id:
          type: integer
        fromAccountId:
          type: integer
        toAccountId:
          type: integer
        amount:
          type: number
        timestamp:
          type: string
          format: date-time
      example:
        id: 101
        fromAccountId: 1
        toAccountId: 2
        amount: 100.00
        timestamp: "2024-02-18T12:34:56Z"
    TransferRequest:
      type: object
      properties:
        fromAccountId:
          type: integer
        toAccountId:
          type: integer
        amount:
          type: number
      required:
        - fromAccountId
        - toAccountId
        - amount
      example:
        fromAccountId: 1
        toAccountId: 2
        amount: 100.00
paths:
  /auth/login:
    post:
      summary: Authenticate and generate a JWT token
      description: Logs in a user and returns an authentication token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
              required:
                - email
                - password
      responses:
        "200":
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
              example:
                token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        "401":
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /auth/logout:
    post:
      summary: Log out the user
      description: Logs out the user and invalidates the JWT token.
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Successful logout
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: "Logged out successfully"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /accounts/{id}:
    get:
      summary: Retrieve account details by ID
      description: Returns the details of a specific bank account.
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Account details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
        "404":
          description: Account not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    put:
      summary: Update account information
      description: Updates the details of a specific bank account.
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
              required:
                - name
                - email
      responses:
        "200":
          description: Account updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /transactions/transfer:
    post:
      summary: Initiate a fund transfer
      description: Transfers funds from one account to another.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransferRequest"
      responses:
        "200":
          description: Transfer successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: "Transfer successful"
        "400":
          description: Invalid input or insufficient funds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /transactions/history:
    get:
      summary: Retrieve transaction history
      description: Returns the transaction history for the authenticated user.
      security:
        - BearerAuth: []
      responses:
        "200":
          description: List of transactions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transaction"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"